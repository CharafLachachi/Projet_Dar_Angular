{"version":3,"file":"auth-strategy.js","sourceRoot":"","sources":["../../../../.ng_build/auth/strategies/auth-strategy.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,YAAY,EAAE,MAAM,sBAAsB,CAAC;AAIpD,OAAO,EAAE,UAAU,EAAE,iBAAiB,EAAE,MAAM,YAAY,CAAC;AAC3D,OAAO,EAAe,iBAAiB,EAAE,MAAM,yBAAyB,CAAC;AAEzE,IAAA;;;IAKE,qFAAqF;IACrF,yDAAyD;;;IACzD,mCAAU;;;IAAV,UAAW,OAAY;QACrB,IAAI,CAAC,OAAO,GAAG,UAAU,CAAC,EAAE,EAAE,IAAI,CAAC,cAAc,EAAE,OAAO,CAAC,CAAC;KAC7D;IAED,kCAAS,GAAT,UAAU,GAAW;QACnB,MAAM,CAAC,iBAAiB,CAAC,IAAI,CAAC,OAAO,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;KACnD;IAED,oCAAW,GAAX,UAAmC,KAAU;QAC3C,MAAM,CAAC,iBAAiB,CAAI,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;KACnF;IAED,gCAAO,GAAP;QACE,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;KAC/B;IAcS,2CAAkB,GAA5B,UAA6B,IAAU;QACrC,MAAM,CAAC,IAAI,YAAY,CAAS,EAAE,IAAI,EAAE,EAAE,EAAE,MAAM,EAAE,GAAG,EAAE,CAAC,CAAC;KAC5D;IAES,8CAAqB,GAA/B,UAAgC,IAAU;QACxC,MAAM,CAAC,IAAI,YAAY,CAAS,EAAE,IAAI,EAAE,EAAE,EAAE,MAAM,EAAE,GAAG,EAAE,CAAC,CAAC;KAC5D;IAES,0CAAiB,GAA3B,UAA4B,MAAc;QACxC,IAAM,cAAc,GAAW,IAAI,CAAC,SAAS,CAAI,MAAM,cAAW,CAAC,CAAC;QACpE,IAAM,YAAY,GAAW,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,CAAC;QAC5D,MAAM,CAAC,YAAY,GAAG,cAAc,CAAC;KACtC;yBAtDH;IAuDC,CAAA;AAhDD,0BAgDC","sourcesContent":["import { HttpResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { NbAuthResult } from '../services/auth-result';\nimport { NbAuthStrategyOptions } from './auth-strategy-options';\nimport { deepExtend, getDeepFromObject } from '../helpers';\nimport { NbAuthToken, nbAuthCreateToken } from '../services/token/token';\n\nexport abstract class NbAuthStrategy {\n\n  protected defaultOptions: NbAuthStrategyOptions;\n  protected options: NbAuthStrategyOptions;\n\n  // we should keep this any and validation should be done in `register` method instead\n  // otherwise it won't be possible to pass an empty object\n  setOptions(options: any): void {\n    this.options = deepExtend({}, this.defaultOptions, options);\n  }\n\n  getOption(key: string): any {\n    return getDeepFromObject(this.options, key, null);\n  }\n\n  createToken<T extends NbAuthToken>(value: any): T {\n    return nbAuthCreateToken<T>(this.getOption('token.class'), value, this.getName());\n  }\n\n  getName(): string {\n    return this.getOption('name');\n  }\n\n  abstract authenticate(data?: any): Observable<NbAuthResult>;\n\n  abstract register(data?: any): Observable<NbAuthResult>;\n\n  abstract requestPassword(data?: any): Observable<NbAuthResult>;\n\n  abstract resetPassword(data?: any): Observable<NbAuthResult>;\n\n  abstract logout(): Observable<NbAuthResult>;\n\n  abstract refreshToken(data?: any): Observable<NbAuthResult>;\n\n  protected createFailResponse(data?: any): HttpResponse<Object> {\n    return new HttpResponse<Object>({ body: {}, status: 401 });\n  }\n\n  protected createSuccessResponse(data?: any): HttpResponse<Object> {\n    return new HttpResponse<Object>({ body: {}, status: 200 });\n  }\n\n  protected getActionEndpoint(action: string): string {\n    const actionEndpoint: string = this.getOption(`${action}.endpoint`);\n    const baseEndpoint: string = this.getOption('baseEndpoint');\n    return baseEndpoint + actionEndpoint;\n  }\n}\n"]}