{"version":3,"file":"password-strategy.js","sourceRoot":"","sources":["../../../../../.ng_build/auth/strategies/password/password-strategy.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { ActivatedRoute } from '@angular/router';\nimport { Observable, of as observableOf } from 'rxjs';\nimport { switchMap, map, catchError } from 'rxjs/operators';\n\nimport { NbAuthResult } from '../../services/auth-result';\nimport { NbAuthStrategy } from '../auth-strategy';\nimport { NbAuthStrategyClass } from '../../auth.options';\nimport { NbPasswordAuthStrategyOptions, passwordStrategyOptions } from './password-strategy-options';\n\n/**\n * The most common authentication provider for email/password strategy.\n *\n * Strategy settings. Note, there is no need to copy over the whole object to change the settings you need.\n * Also, this.getOption call won't work outside of the default options declaration\n * (which is inside of the `NbPasswordAuthStrategy` class), so you have to replace it with a custom helper function\n * if you need it.\n *\n * ```ts\n *export class NbPasswordAuthStrategyOptions extends NbAuthStrategyOptions {\n *  name: string;\n *  baseEndpoint? = '/api/auth/';\n *  login?: boolean | NbPasswordStrategyModule = {\n *    alwaysFail: false,\n *    endpoint: 'login',\n *    method: 'post',\n *    failWhenNoToken: true,\n *    redirect: {\n *      success: '/',\n *      failure: null,\n *    },\n *    defaultErrors: ['Login/Email combination is not correct, please try again.'],\n *    defaultMessages: ['You have been successfully logged in.'],\n *  };\n *  register?: boolean | NbPasswordStrategyModule = {\n *    alwaysFail: false,\n *    rememberMe: true,\n *    endpoint: 'register',\n *    method: 'post',\n *    failWhenNoToken: true,\n *    redirect: {\n *      success: '/',\n *      failure: null,\n *    },\n *    defaultErrors: ['Something went wrong, please try again.'],\n *    defaultMessages: ['You have been successfully registered.'],\n *  };\n *  requestPass?: boolean | NbPasswordStrategyModule = {\n *    endpoint: 'request-pass',\n *    method: 'post',\n *    redirect: {\n *      success: '/',\n *      failure: null,\n *    },\n *    defaultErrors: ['Something went wrong, please try again.'],\n *    defaultMessages: ['Reset password instructions have been sent to your email.'],\n *  };\n *  resetPass?: boolean | NbPasswordStrategyReset = {\n *    endpoint: 'reset-pass',\n *    method: 'put',\n *    redirect: {\n *      success: '/',\n *      failure: null,\n *    },\n *    resetPasswordTokenKey: 'reset_password_token',\n *    defaultErrors: ['Something went wrong, please try again.'],\n *    defaultMessages: ['Your password has been successfully changed.'],\n *  };\n *  logout?: boolean | NbPasswordStrategyReset = {\n *    alwaysFail: false,\n *    endpoint: 'logout',\n *    method: 'delete',\n *    redirect: {\n *      success: '/',\n *      failure: null,\n *    },\n *    defaultErrors: ['Something went wrong, please try again.'],\n *    defaultMessages: ['You have been successfully logged out.'],\n *  };\n *  refreshToken?: boolean | NbPasswordStrategyModule = {\n *    endpoint: 'refresh-token',\n *    method: 'post',\n *    failWhenNoToken: true,\n *    redirect: {\n *      success: null,\n *      failure: null,\n *    },\n *    defaultErrors: ['Something went wrong, please try again.'],\n *    defaultMessages: ['Your token has been successfully refreshed.'],\n *  };\n *  token?: NbPasswordStrategyToken = {\n *    class: NbAuthSimpleToken,\n *    key: 'data.token',\n *    getter: (module: string, res: HttpResponse<Object>, options: NbPasswordAuthStrategyOptions) => getDeepFromObject(\n *      res.body,\n *      options.token.key,\n *    ),\n *  };\n *  errors?: NbPasswordStrategyMessage = {\n *    key: 'data.errors',\n *    getter: (module: string, res: HttpErrorResponse, options: NbPasswordAuthStrategyOptions) => getDeepFromObject(\n *      res.error,\n *      options.errors.key,\n *      options[module].defaultErrors,\n *    ),\n *  };\n *  messages?: NbPasswordStrategyMessage = {\n *    key: 'data.messages',\n *    getter: (module: string, res: HttpResponse<Object>, options: NbPasswordAuthStrategyOptions) => getDeepFromObject(\n *      res.body,\n *      options.messages.key,\n *      options[module].defaultMessages,\n *    ),\n *  };\n *  validation?: {\n *    password?: {\n *      required?: boolean;\n *      minLength?: number | null;\n *      maxLength?: number | null;\n *      regexp?: string | null;\n *    };\n *    email?: {\n *      required?: boolean;\n *      regexp?: string | null;\n *    };\n *    fullName?: {\n *      required?: boolean;\n *      minLength?: number | null;\n *      maxLength?: number | null;\n *      regexp?: string | null;\n *    };\n *  };\n *}\n * ```\n */\n@Injectable()\nexport class NbPasswordAuthStrategy extends NbAuthStrategy {\n\n  protected defaultOptions: NbPasswordAuthStrategyOptions = passwordStrategyOptions;\n\n  static setup(options: NbPasswordAuthStrategyOptions): [NbAuthStrategyClass, NbPasswordAuthStrategyOptions] {\n    return [NbPasswordAuthStrategy, options];\n  }\n\n  constructor(protected http: HttpClient, private route: ActivatedRoute) {\n    super();\n  }\n\n  authenticate(data?: any): Observable<NbAuthResult> {\n    const method = this.getOption('login.method');\n    const url = this.getActionEndpoint('login');\n    return this.http.request(method, url, {body: data, observe: 'response'})\n      .pipe(\n        map((res) => {\n          if (this.getOption('login.alwaysFail')) {\n            throw this.createFailResponse(data);\n          }\n\n          return res;\n        }),\n        this.validateToken('login'),\n        map((res) => {\n          return new NbAuthResult(\n            true,\n            res,\n            this.getOption('login.redirect.success'),\n            [],\n            this.getOption('messages.getter')('login', res, this.options),\n            this.createToken(this.getOption('token.getter')('login', res, this.options)));\n        }),\n        catchError((res) => {\n          let errors = [];\n          if (res instanceof HttpErrorResponse) {\n            errors = this.getOption('errors.getter')('login', res, this.options);\n          } else {\n            errors.push('Something went wrong.');\n          }\n\n          return observableOf(\n            new NbAuthResult(\n              false,\n              res,\n              this.getOption('login.redirect.failure'),\n              errors,\n            ));\n        }),\n      );\n  }\n\n  register(data?: any): Observable<NbAuthResult> {\n    const method = this.getOption('register.method');\n    const url = this.getActionEndpoint('register');\n    return this.http.request(method, url, {body: data, observe: 'response'})\n      .pipe(\n        map((res) => {\n          if (this.getOption('register.alwaysFail')) {\n            throw this.createFailResponse(data);\n          }\n\n          return res;\n        }),\n        this.validateToken('register'),\n        map((res) => {\n          return new NbAuthResult(\n            true,\n            res,\n            this.getOption('register.redirect.success'),\n            [],\n            this.getOption('messages.getter')('register', res, this.options),\n            this.createToken(this.getOption('token.getter')('login', res, this.options)));\n        }),\n        catchError((res) => {\n          let errors = [];\n          if (res instanceof HttpErrorResponse) {\n            errors = this.getOption('errors.getter')('register', res, this.options);\n          } else {\n            errors.push('Something went wrong.');\n          }\n\n          return observableOf(\n            new NbAuthResult(\n              false,\n              res,\n              this.getOption('register.redirect.failure'),\n              errors,\n            ));\n        }),\n      );\n  }\n\n  requestPassword(data?: any): Observable<NbAuthResult> {\n    const method = this.getOption('requestPass.method');\n    const url = this.getActionEndpoint('requestPass');\n    return this.http.request(method, url, {body: data, observe: 'response'})\n      .pipe(\n        map((res) => {\n          if (this.getOption('requestPass.alwaysFail')) {\n            throw this.createFailResponse();\n          }\n\n          return res;\n        }),\n        map((res) => {\n          return new NbAuthResult(\n            true,\n            res,\n            this.getOption('requestPass.redirect.success'),\n            [],\n            this.getOption('messages.getter')('requestPass', res, this.options));\n        }),\n        catchError((res) => {\n          let errors = [];\n          if (res instanceof HttpErrorResponse) {\n            errors = this.getOption('errors.getter')('requestPass', res, this.options);\n          } else {\n            errors.push('Something went wrong.');\n          }\n\n          return observableOf(\n            new NbAuthResult(\n              false,\n              res,\n              this.getOption('requestPass.redirect.failure'),\n              errors,\n            ));\n        }),\n      );\n  }\n\n  resetPassword(data: any = {}): Observable<NbAuthResult> {\n    const tokenKey = this.getOption('resetPass.resetPasswordTokenKey');\n    data[tokenKey] = this.route.snapshot.queryParams[tokenKey];\n\n    const method = this.getOption('resetPass.method');\n    const url = this.getActionEndpoint('resetPass');\n    return this.http.request(method, url, {body: data, observe: 'response'})\n      .pipe(\n        map((res) => {\n          if (this.getOption('resetPass.alwaysFail')) {\n            throw this.createFailResponse();\n          }\n\n          return res;\n        }),\n        map((res) => {\n          return new NbAuthResult(\n            true,\n            res,\n            this.getOption('resetPass.redirect.success'),\n            [],\n            this.getOption('messages.getter')('resetPass', res, this.options));\n        }),\n        catchError((res) => {\n          let errors = [];\n          if (res instanceof HttpErrorResponse) {\n            errors = this.getOption('errors.getter')('resetPass', res, this.options);\n          } else {\n            errors.push('Something went wrong.');\n          }\n\n          return observableOf(\n            new NbAuthResult(\n              false,\n              res,\n              this.getOption('resetPass.redirect.failure'),\n              errors,\n            ));\n        }),\n      );\n  }\n\n  logout(): Observable<NbAuthResult> {\n\n    const method = this.getOption('logout.method');\n    const url = this.getActionEndpoint('logout');\n\n    return observableOf({})\n      .pipe(\n        switchMap((res: any) => {\n          if (!url) {\n            return observableOf(res);\n          }\n          return this.http.request(method, url, {observe: 'response'});\n        }),\n        map((res) => {\n          if (this.getOption('logout.alwaysFail')) {\n            throw this.createFailResponse();\n          }\n\n          return res;\n        }),\n        map((res) => {\n          return new NbAuthResult(\n            true,\n            res,\n            this.getOption('logout.redirect.success'),\n            [],\n            this.getOption('messages.getter')('logout', res, this.options));\n        }),\n        catchError((res) => {\n          let errors = [];\n          if (res instanceof HttpErrorResponse) {\n            errors = this.getOption('errors.getter')('logout', res, this.options);\n          } else {\n            errors.push('Something went wrong.');\n          }\n\n          return observableOf(\n            new NbAuthResult(\n              false,\n              res,\n              this.getOption('logout.redirect.failure'),\n              errors,\n            ));\n        }),\n      );\n  }\n\n  refreshToken(data?: any): Observable<NbAuthResult> {\n\n    const method = this.getOption('refreshToken.method');\n    const url = this.getActionEndpoint('refreshToken');\n\n    return this.http.request(method, url, {body: data, observe: 'response'})\n      .pipe(\n        map((res) => {\n          if (this.getOption('refreshToken.alwaysFail')) {\n            throw this.createFailResponse(data);\n          }\n\n          return res;\n        }),\n        this.validateToken('refreshToken'),\n        map((res) => {\n          return new NbAuthResult(\n            true,\n            res,\n            this.getOption('refreshToken.redirect.success'),\n            [],\n            this.getOption('messages.getter')('refreshToken', res, this.options),\n            this.createToken(this.getOption('token.getter')('login', res, this.options)));\n        }),\n        catchError((res) => {\n          let errors = [];\n          if (res instanceof HttpErrorResponse) {\n            errors = this.getOption('errors.getter')('refreshToken', res, this.options);\n          } else {\n            errors.push('Something went wrong.');\n          }\n\n          return observableOf(\n            new NbAuthResult(\n              false,\n              res,\n              this.getOption('refreshToken.redirect.failure'),\n              errors,\n            ));\n        }),\n      );\n  }\n\n  protected validateToken(module: string): any {\n    return map((res) => {\n      const token = this.getOption('token.getter')(module, res, this.options);\n      if (!token && this.getOption(`${module}.failWhenNoToken`)) {\n        const key = this.getOption('token.key');\n        console.warn(`NbPasswordAuthStrategy:\n                          Token is not provided under '${key}' key\n                          with getter '${this.getOption('token.getter')}', check your auth configuration.`);\n\n        throw new Error('Could not extract token from the response.');\n      }\n      return res;\n    });\n  }\n}\n"]}