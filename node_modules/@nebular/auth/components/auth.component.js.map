{"version":3,"file":"auth.component.js","sourceRoot":"","sources":["../../../../.ng_build/auth/components/auth.component.ts"],"names":[],"mappings":"AAKA,OAAO,EAAE,SAAS,EAAa,MAAM,eAAe,CAAC;AACrD,OAAO,EAAE,QAAQ,EAAE,MAAM,iBAAiB,CAAC;AAE3C,OAAO,EAAE,aAAa,EAAE,MAAM,0BAA0B,CAAC;AACzD,OAAO,EAAE,SAAS,EAAE,MAAM,gBAAgB,CAAC;;IA+BzC,2DAA2D;IAC3D,yBAAsB,IAAmB,EAAY,QAAkB;QAAvE,iBAOC;QAPqB,SAAI,GAAJ,IAAI,CAAe;QAAY,aAAQ,GAAR,QAAQ,CAAU;qBARvD,IAAI;6BAIK,KAAK;qBACd,EAAE;QAKhB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,sBAAsB,EAAE;aAC9C,IAAI,CAAC,SAAS,CAAC,cAAM,OAAA,KAAI,CAAC,KAAK,EAAV,CAAU,CAAC,CAAC;aACjC,SAAS,CAAC,UAAC,aAAsB;YAChC,KAAI,CAAC,aAAa,GAAG,aAAa,CAAC;SACpC,CAAC,CAAC;KACN;IAED,8BAAI,GAAJ;QACE,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;QACrB,MAAM,CAAC,KAAK,CAAC;KACd;IAED,qCAAW,GAAX;QACE,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;KACpB;;gBA9CF,SAAS,SAAC;oBACT,QAAQ,EAAE,SAAS;oBACnB,SAAS,EAAE,CAAC,sBAAsB,CAAC;oBACnC,QAAQ,EAAE,6dAeT;iBACF;;;;gBAtBQ,aAAa;gBAFb,QAAQ;;0BANjB;;SA+Ba,eAAe","sourcesContent":["/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\nimport { Component, OnDestroy } from '@angular/core';\nimport { Location } from '@angular/common';\n\nimport { NbAuthService } from '../services/auth.service';\nimport { takeWhile } from 'rxjs/operators';\n\n@Component({\n  selector: 'nb-auth',\n  styleUrls: ['./auth.component.css'],\n  template: `\n    <nb-layout>\n      <nb-layout-column>\n        <nb-card>\n          <nb-card-header>\n            <a href=\"#\" (click)=\"back()\"><i class=\"nb-arrow-thin-left\"></i></a>\n          </nb-card-header>\n          <nb-card-body>\n            <div class=\"flex-centered col-xl-4 col-lg-6 col-md-8 col-sm-12\">\n              <router-outlet></router-outlet>\n            </div>\n          </nb-card-body>\n        </nb-card>\n      </nb-layout-column>\n    </nb-layout>\n  `,\n})\nexport class NbAuthComponent implements OnDestroy {\n\n  private alive = true;\n\n  subscription: any;\n\n  authenticated: boolean = false;\n  token: string = '';\n\n  // showcase of how to use the onAuthenticationChange method\n  constructor(protected auth: NbAuthService, protected location: Location) {\n\n    this.subscription = auth.onAuthenticationChange()\n      .pipe(takeWhile(() => this.alive))\n      .subscribe((authenticated: boolean) => {\n        this.authenticated = authenticated;\n      });\n  }\n\n  back() {\n    this.location.back();\n    return false;\n  }\n\n  ngOnDestroy(): void {\n    this.alive = false;\n  }\n}\n"]}