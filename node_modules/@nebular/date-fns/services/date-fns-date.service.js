var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
/*
 * @license
 * Copyright Akveo. All Rights Reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 */
import { Inject, Injectable, LOCALE_ID } from '@angular/core';
import { NbNativeDateService } from '@nebular/theme';
import * as dateFnsParse from 'date-fns/parse';
import { default as rollupParse } from 'moment';
var parse = rollupParse || dateFnsParse;
var NbDateFnsDateService = /** @class */ (function (_super) {
    __extends(NbDateFnsDateService, _super);
    function NbDateFnsDateService(locale) {
        var _this = _super.call(this, locale) || this;
        _this.setLocale(locale);
        return _this;
    }
    NbDateFnsDateService.prototype.parse = function (date, format) {
        return parse(date, format, new Date());
    };
    NbDateFnsDateService.decorators = [
        { type: Injectable },
    ];
    /** @nocollapse */
    NbDateFnsDateService.ctorParameters = function () { return [
        { type: undefined, decorators: [{ type: Inject, args: [LOCALE_ID,] },] },
    ]; };
    return NbDateFnsDateService;
}(NbNativeDateService));
export { NbDateFnsDateService };
//# sourceMappingURL=date-fns-date.service.js.map